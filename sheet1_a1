import numpy as np
import matplotlib.pyplot as plt
import cv2
import time

#procedure which determines the minimum of a convex function f in the interval [a, b] using â€œtrisection" of the interval
def trisection(f, left, right, tol):
    while (right - left) > tol:
        middle = (left + right)/2
        lm = (left + middle)/2
        rm = (middle + right)/2
        if f(lm) < f(rm):
            right = rm
        else:
            left = lm
    return (left + right)/2


#procedure which determines the minimum of function f using the derivative of f
def derivative(f, x, tol):
    dx = x[1]-x[0]
    y = f(x)
    dydx = np.gradient(y, dx)
    #find where the derivative is 0 +- tol
    minima = np.where(np.abs(dydx) < tol)
    return x[minima]





def f_convex(x):
    alpha = 1
    beta = 2
    return np.exp(-alpha*x)+np.power(x,beta)


a = 0
b = 1

tol = 0.0001

x = np.linspace(0,1,int(1/tol))
minimum = trisection(f_convex,a,b,tol)
minimum_der = derivative(f_convex,x, tol)
print('Minimum of convex function: ', minimum)
print('Minimum of convex function using derivative: ', minimum_der)


y = f_convex(x)

#plotting the function and the minimum
plt.plot(x,y)
plt.plot(minimum,f_convex(minimum),'ro')
plt.title("Find Minimum")
plt.xlabel("x")
plt.ylabel("y")
plt.legend(["Convex Function","Mimimum of Convex Function"])
plt.show()     