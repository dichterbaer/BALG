import cv2
from balg_utils import read_image, difference_image, race_functions2
from matplotlib import pyplot as plt
from scipy.ndimage import morphological_laplace
import numpy as np

def linear_laplace_contrast_enhancement(img, ksize=3, c = 1):
    """Laplace contrast enhancement"""
    #apply laplace filter and multiply with constant
    laplace = c * cv2.Laplacian(img, cv2.CV_16S, ksize=ksize)
    #convert to uint8
    laplace = cv2.convertScaleAbs(laplace)
    #substract laplace from original image
    img_contrastEnhanced = cv2.subtract(img, laplace)
    return img_contrastEnhanced


def morphological_laplace_contrast_enhancement(img, ksize = 3, c = 1):
    morph_laplace = morphological_laplace(img, ksize)
    img_contrastEnhanced = cv2.subtract(img, c * morph_laplace, dtype=cv2.CV_16S)
    #convert to uint8
    img_contrastEnhanced = cv2.convertScaleAbs(img_contrastEnhanced)
    return img_contrastEnhanced


def tophap_contrast_enhancement(img, ksize = 3, c = 1):
    structuring_element = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (ksize, ksize))
    opnened = cv2.morphologyEx(img, cv2.MORPH_OPEN, structuring_element)
    closed = cv2.dilate(img, structuring_element)
    #create empty image with enogh space for the result
    img_contrastEnhanced = np.zeros(img.shape, dtype=np.uint16)
    img_contrastEnhanced = (1 + 2*c) * img - c * (opnened + closed)
    #convert to uint8
    img_contrastEnhanced = cv2.convertScaleAbs(img_contrastEnhanced)
    return img_contrastEnhanced



img = read_image(r'data\lowContrast.jpg')
c = 0.05
img_contrastEnhanced = morphological_laplace_contrast_enhancement(img, ksize=3, c = c)
difference_image(img, img_contrastEnhanced, name1='Original', name2='Contrast Enhanced')

#show results in plot
plt.figure(figsize=(10,10))
plt.subplot(1,2,1)
plt.imshow(img, cmap='gray')
plt.title('Original')
plt.subplot(1,2,2)
plt.imshow(img_contrastEnhanced, cmap='gray')
plt.title('Contrast Enhanced with c = ' + str(c))
plt.show()

